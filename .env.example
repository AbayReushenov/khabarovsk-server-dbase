# üèîÔ∏è Khabarovsk Forecast Buddy - Environment Configuration
# Copy this file to .env and configure your settings

# ==========================================
# SUPABASE DATABASE CONFIGURATION
# ==========================================
# Get these from: https://supabase.com/dashboard/project/YOUR_PROJECT/settings/api
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_ANON_KEY=your_anon_key_here
SUPABASE_SERVICE_KEY=your_service_key_here

# ==========================================
# GIGACHAT API CONFIGURATION
# ==========================================
# Get these from: https://developers.sber.ru/portal/products/gigachat-api

# Option 1: Legacy credentials (if you have them)
GIGACHAT_CREDENTIALS=

# Option 2: OAuth credentials (recommended)
GIGACHAT_CLIENT_ID=your_client_id_here
GIGACHAT_CLIENT_SECRET=your_client_secret_here
GIGACHAT_CLIENT_AUTH_KEY=your_base64_encoded_key_here
GIGACHAT_SCOPE=GIGACHAT_API_PERS

# GigaChat API endpoints (usually don't need to change)
GIGACHAT_AUTH_URL=https://ngw.devices.sberbank.ru:9443/api/v2/oauth
GIGACHAT_BASE_URL=https://gigachat.devices.sberbank.ru/api/v1

# ==========================================
# APPLICATION CONFIGURATION
# ==========================================
# Environment mode: development, staging, production
ENVIRONMENT=development

# ==========================================
# DEVELOPMENT NOTES
# ==========================================
# 1. GIGACHAT_CLIENT_AUTH_KEY should be base64 encoded string of "client_id:client_secret"
#    You can generate it with: echo -n "client_id:client_secret" | base64
#
# 2. If you don't have GigaChat credentials, leave them empty to use mock mode
#
# 3. If you don't have Supabase, leave database settings empty for local development
#
# 4. For production deployment, make sure to set all values properly
#
# 5. Never commit the actual .env file to version control!
